import eei::*;

module core (
    clk   : input   clock                          ,
    rst   : input   reset                          ,
    membus: modport membus_if::<ILEN, XLEN>::master,
) {
    // The address of the instruction to be fetched next
    var if_pc: Addr;
    // Whether the instruction fetch is being requested
    var if_is_requested: logic;
    // The address of the instruction being fetched
    var if_pc_requested: Addr;

    // The address of the instruction to be fetched next
    let if_pc_next: Addr = if_pc + 4;

    // Actual process of the instruction fetch
    always_comb {
        membus.valid = 1;
        membus.addr  = if_pc; // always requesting the next instruction
        membus.wen   = 0; // never write
        membus.wdata = 'x; // `don't care` value
    }

    always_ff {
        if_reset {
            if_pc           = 0;
            if_is_requested = 0;
            if_pc_requested = 0;
        } else {
            if if_is_requested { // fetching ?
                if membus.rvalid { // If the instruction fetch is done ?
                    if_is_requested = membus.ready && membus.valid; // If already ready to fetch, then start fetching
                    if membus.ready && membus.valid { // Ready to fetch ?
                        if_pc           = if_pc_next;
                        if_pc_requested = if_pc;
                    }
                }
            } else {
                if membus.ready && membus.valid { // Ready to fetch ?
                    if_is_requested = 1; // Mark as fetching
                    if_pc           = if_pc_next; // Store the if_pc_next to if_pc, indicating the next instruction to be fetched
                    if_pc_requested = if_pc; // Now we are fetching the instruction at `if_pc_requested = if_pc(this cycle)`.
                }
            }
        }
    }

    // Debug Print
    always_ff {
        if if_is_requested && membus.rvalid { // If the instruction fetch is being requested and the instruction fetch is done
            $display("Instruction fetched at %h: %h", if_pc_requested, membus.rdata);
        }
    }
}
